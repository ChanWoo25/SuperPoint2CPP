################ ORB SLAM 2 PARAMETERS ################
#--------------------------------------------------------------------------------------------
# Camera Parameters. Adjust them!
#--------------------------------------------------------------------------------------------

# Camera calibration and distortion parameters (OpenCV) 
Camera.fx: 535.4
Camera.fy: 539.2
Camera.cx: 320.1
Camera.cy: 247.6

Camera.k1: 0.0
Camera.k2: 0.0
Camera.p1: 0.0
Camera.p2: 0.0

Camera.width: 640
Camera.height: 480

# Camera frames per second 
Camera.fps: 30.0

# IR projector baseline times fx (aprox.)
Camera.bf: 40.0

# Color order of the images (0: BGR, 1: RGB. It is ignored if images are grayscale)
Camera.RGB: 0

# Close/Far threshold. Baseline times.
ThDepth: 40.0

# Deptmap values factor
DepthMapFactor: 1

#--------------------------------------------------------------------------------------------
# ORB Parameters
#--------------------------------------------------------------------------------------------

# ORB Extractor: Number of features per image
ORBextractor.nFeatures: 1000

# ORB Extractor: Scale factor between levels in the scale pyramid 	
ORBextractor.scaleFactor: 1.2

# ORB Extractor: Number of levels in the scale pyramid	
ORBextractor.nLevels: 8

# ORB Extractor: Fast threshold
# Image is divided in a grid. At each cell FAST are extracted imposing a minimum response.
# Firstly we impose iniThFAST. If no corners are detected we impose a lower value minThFAST
# You can lower these values if your images have low contrast			
ORBextractor.iniThFAST: 20
ORBextractor.minThFAST: 7

#--------------------------------------------------------------------------------------------
# Viewer Parameters
#--------------------------------------------------------------------------------------------
Viewer.KeyFrameSize: 0.05
Viewer.KeyFrameLineWidth: 1
Viewer.GraphLineWidth: 0.9
Viewer.PointSize:2
Viewer.CameraSize: 0.08
Viewer.CameraLineWidth: 3
Viewer.ViewpointX: 0
Viewer.ViewpointY: -0.7
Viewer.ViewpointZ: -1.8
Viewer.ViewpointF: 500
#######################################################

<ver 0.1 - GPU 사용, use nms, 최적화 덜됨>
[Test 1]
conf_thres      0.015
max_nms         100(개)
input_size      {160, 120}
proc_time       20~25(ms)

+ thres를 0.015 정도로 유지했을 때
cpu, gpu처리 속도 차이가 크지 않았다.
thres를 낮추는 경우 후보 keypoint가 많아지면서,
nms에 시간이 더 오래 걸리고, gpu->cpu로 넘어가는
descriptor의 크기도 커져서 그런게 아닌가 싶다.

[Test 2]
conf_thres      0.015
max_nms         100(개)
input_size      {320, 240}
proc_time       64~70(ms)

+ 인풋 사이즈를 늘리자 시간이 많이 늘어났지만 
인풋사이즈가 4배 늘어난 것에 비해 크지는 않다고 생각.
+ nms를 60개 선에서 끊는 경우,30ms 정도 소요되는 걸로 보아
sorting&nms가 잡아먹는 시간이 상당한 것으로 보임.

[Test 3]
device          cpu
conf_thres      0.015
max_nms         100(개)
input_size      {320, 240}
proc_time       64~70(ms)

+ cpu로 돌리면 인풋 사이즈가 커지는 시점에서 다음 에러 발생.
```
Test: malloc.c:3729: _int_malloc: Assertion `(unsigned long) (size) >= (unsigned long) (nb)' failed.
Aborted (core dumped)
```


